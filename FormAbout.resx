<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>