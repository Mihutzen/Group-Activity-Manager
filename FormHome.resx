<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LogoBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        LLHEXwHirl5iF+C8ywAAAABJRU5ErkJggg==
</value>
  </data>
</root>